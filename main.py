# -*- coding: utf-8 -*-
"""proje.py

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1X2vVq66NaQCKcmdawDVnGzpCsoyzaxNz
"""

#Eklenen kütüphaneler
import csv
import datetime
from tabulate import tabulate

#Menu.txt dosyası oluşturuldu
with open("Menu.txt" , "w") as file:
  file.write("* Lütfen Bir Pizza Tabanı Seçiniz:\n1: Klasik\n2: Margarita\n3: TürkPizza\n4: Sade Pizza\n* ve seçeceğiniz sos:\n11: Zeytin\n12: Mantarlar\n13: Keçi Peyniri\n14: Et\n15: Soğan\n16: Mısır\n* Teşekkür ederiz!")

#Pizza üst sınıfı
class pizza:
    def __init__(self, description, cost):
        self.description = description
        self.cost = cost

    def get_description(self):
        return self.description

    def get_cost(self):
        return self.cost

#Pizza alt sınıfları
class MargheritaPizza(pizza):
    def __init__(self):
        super().__init__("Margherita Pizza", 30.0)

class KlasikPizza(pizza):
     def __init__(self):
        super().__init__("Klasik Pizza", 15.0)

class DominosPizza(pizza):
     def __init__(self):
        super().__init__("Dominos Pizza", 40.0)

class SadePizza(pizza):
     def __init__(self):
        super().__init__("Sade Pizza", 10.0)


#Decorator üst sınıfı
class Decorator(pizza):
    def __init__(self, component):
        self.component = component

    def get_cost(self):
        return self.component.get_cost() + pizza.get_cost(self)

    def get_description(self):
        return pizza.get_description(self) + ' ' + self.component.get_description()

#Decorator alt sınıfları
class Olive(Decorator):
    def __init__(self, component):
        super().__init__(component)   
        self.cost = 0.75
        self.description = "Zeytinli"

class Mushroom(Decorator):
    def __init__(self, component):
        super().__init__(component)   
        self.cost = 2.5
        self.description = "Mantarlı"

class Cheese(Decorator):
    def __init__(self, component):
        super().__init__(component)   
        self.cost = 4
        self.description = "Peynirli"

class Meat(Decorator):
    def __init__(self, component):
        super().__init__(component)   
        self.cost = 8.5
        self.description = "Etli"

class Onion(Decorator):
    def __init__(self, component):
        super().__init__(component)   
        self.cost = 4.5
        self.description = "Soğanlı"

class Corn(Decorator):
    def __init__(self, component):
        super().__init__(component)   
        self.cost = 2.0
        self.description = "Mısırlı"

#Main fonksiyonu
def main():

  #Menüyü kullanıcının görmesi için ekrana yazdırdık
  with open("Menu.txt", "r") as f:
    menu = f.read()
    print(menu)

  #1 ile 4 dahil arasında bir numara seçerek pizzayı kullanıcıya seçtirdik.
  pizza_choice = float (input("Lütfen pizza seçiminizi yapınız(1-4)"))

  if pizza_choice == 1:
    pizza = KlasikPizza()
    pizza_price = KlasikPizza().get_cost()

  elif pizza_choice == 2:
    pizza = MargheritaPizza()
    pizza_price = MargheritaPizza().get_cost()

  elif pizza_choice == 3:
    pizza = DominosPizza()
    pizza_price = DominosPizza().get_cost()

  elif pizza_choice == 4:
    pizza = SadePizza()
    pizza_price = SadePizza().get_cost()

  #Eğer bu aralıkta değer girilmediyse kullanıcıdan tekrar seçim yapmasını istiyoruz
  else:
    while True:
      pizza_choice = float(input("Lütfen 1 ile 4 arası şeçim yapın:"))
      if pizza_choice >= 1 and pizza_choice <= 4.0:
        if pizza_choice == 1:
          pizza = KlasikPizza()
          pizza_price = KlasikPizza().get_cost()

        elif pizza_choice == 2:
          pizza = MargheritaPizza()
          pizza_price = MargheritaPizza().get_cost()

        elif pizza_choice == 3:
          pizza = DominosPizza()
          pizza_price = DominosPizza().get_cost()

        elif pizza_choice == 4:
          pizza = SadePizza()
          pizza_price = SadePizza().get_cost()
        break

  
  #eklemek istediği malzemeyi 11 ile 16 dahil arasında kullanıcıya seçtiriyoruz
  sauce_choice = float (input("Lütfen sos seçiminizi yapınız(11-16)"))

  #seçilen dekorlara göre pizzanın fiyatını güncelliyoruz.
  #seçilen dekorlar ile pizzanın açıklamasını güncelliyoruz.
  if sauce_choice == 11:
    pizza_price = Olive(pizza).get_cost()
    pizza_description = Olive(pizza).get_description()

  elif sauce_choice == 12:
    pizza_price = Mushroom(pizza).get_cost()
    pizza_description = Mushroom(pizza).get_description()

  elif sauce_choice == 13:
    pizza_price = Cheese(pizza).get_cost()
    pizza_description = Cheese(pizza).get_description()

  elif sauce_choice == 14:
    pizza_price = Meat(pizza).get_cost()
    pizza_description = Meat(pizza).get_description()

  elif sauce_choice == 15:
    pizza_price = Onion(pizza).get_cost()
    pizza_description = Onion(pizza).get_description()

  elif sauce_choice == 16:
    pizza_price = Corn(pizza).get_cost()
    pizza_description = Corn(pizza).get_description()

  #Seçilen değer bu değer aralıklarında değil ise kullanıcının tekrar dekor ürünü seçmesini istiyoruz.
  else:
    while True:
      sauce_choice = float(input("Lütfen 11 ile 16 arası şeçim yapın:"))
      if sauce_choice >= 11 and sauce_choice <= 16 :
        if sauce_choice == 11:
          pizza_price = Olive(pizza).get_cost()
          pizza_description = Olive(pizza).get_description()

        elif sauce_choice == 12:
          pizza_price = Mushroom(pizza).get_cost()
          pizza_description = Mushroom(pizza).get_description()

        elif sauce_choice == 13:
          pizza_price = Cheese(pizza).get_cost()
          pizza_description = Cheese(pizza).get_description()

        elif sauce_choice == 14:
          pizza_price = Meat(pizza).get_cost()
          pizza_description = Meat(pizza).get_description()

        elif sauce_choice == 15:
          pizza_price = Onion(pizza).get_cost()
          pizza_description = Onion(pizza).get_description()

        elif sauce_choice == 16:
          pizza_price = Corn(pizza).get_cost()
          pizza_description = Corn(pizza).get_description()
        break


  print(f"Pizza fiyatı: {pizza_price}")

  #kullanıcıdan bilgilerini girmesini istiyoruz.
  name = input("Lütfen isim giriniz:")
  surname = input("Lütfen soyad giriniz:")
  Tc = input("Lütfen Tc Kimlik numaranızı giriniz:")
  no = input("Lütfen Kredi Kartı numaranızı giriniz:")
  password = input("Lütfen şifrenizi giriniz:")

  #sipariş anı
  an = datetime.datetime.now()
  zaman = tarih = datetime.datetime.ctime(an)
 

  #Csv dosyasına önce başlıkları bir satır halinde daha sonra da kullanıcı bilgilerini ve sipariş detaylarını bir alt satıra yazıyoruz.
  basliklar = ["Sipaiş Zamanı","Ad","Soyad","T.C Kimlik", "Kredi Kart No", "Kart Şifre","Sipariş Açıklaması" , "Ödenen Miktar"]
  veriler = [zaman, name, surname, Tc, no, password, pizza_description, pizza_price]
  with open("Order_Database.csv" , mode = "w") as orders:
    writer = csv.writer(orders)
    writer.writerow(basliklar)
    writer.writerow(veriler)
  
  #Ekrana tablo halinde csv dosyasındaki bilgileri yazdırıyoruz.
  satirlar=[]
  with open("Order_Database.csv" , mode = "r") as orders:
    okuyucu = csv.reader(orders)
    for satir in okuyucu:
      satirlar.append(satir)
  print(tabulate(satirlar))
  
main()
